{"mappings":"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","sources":["<anon>","main.ts","node_modules/@tentjs/tent/dist/main.js","node_modules/@tentjs/tent/src/main.ts"],"sourcesContent":["var $04c26890a8c692c9$exports = {};\nfunction $04c26890a8c692c9$var$$parcel$export(e, n, v, s) {\n    Object.defineProperty(e, n, {\n        get: v,\n        set: s,\n        enumerable: true,\n        configurable: true\n    });\n}\n$04c26890a8c692c9$var$$parcel$export($04c26890a8c692c9$exports, \"mount\", ()=>$04c26890a8c692c9$var$$53ffd25df6034fb9$export$186d02efde07ef98);\n$04c26890a8c692c9$var$$parcel$export($04c26890a8c692c9$exports, \"tags\", ()=>$04c26890a8c692c9$var$$53ffd25df6034fb9$export$8b7a896ae75accbf);\nfunction $04c26890a8c692c9$var$$53ffd25df6034fb9$export$186d02efde07ef98(el, component) {\n    const { state: state, view: view, mounted: mounted } = component;\n    let node;\n    if (el == null) return;\n    const proxy = state ? new Proxy({\n        ...state\n    }, {\n        set (obj, prop, value) {\n            if (!obj.hasOwnProperty(prop)) throw new Error(`The property \"${String(prop)}\" does not exist on the state object.`);\n            if (obj[prop] === value) return true;\n            const s = Reflect.set(obj, prop, value);\n            $04c26890a8c692c9$var$$53ffd25df6034fb9$var$walker(node, view({\n                state: proxy\n            }));\n            return s;\n        }\n    }) : {};\n    node = view({\n        state: proxy\n    });\n    node.$tent = {\n        attributes: {},\n        isComponent: true\n    };\n    el.append(node);\n    mounted?.({\n        state: proxy\n    });\n}\nfunction $04c26890a8c692c9$var$$53ffd25df6034fb9$var$createElement(context) {\n    const [tag, children, attributes] = context;\n    const elm = document.createElement(tag);\n    elm.$tent = {\n        attributes: {},\n        isComponent: false\n    };\n    if (Array.isArray(children)) children.forEach((c)=>elm.append(Array.isArray(c) ? $04c26890a8c692c9$var$$53ffd25df6034fb9$var$createElement(c) : c));\n    else elm.append(children);\n    for(const key in attributes){\n        elm.$tent.attributes[key] = attributes[key];\n        if (key.startsWith(\"on\") || /[A-Z]/.test(key)) elm[key] = attributes[key];\n        else elm.setAttribute(key, attributes[key]);\n    }\n    return elm;\n}\nfunction $04c26890a8c692c9$var$$53ffd25df6034fb9$var$walker(oldNode, newNode) {\n    const lc = Array.from(newNode.children);\n    if (oldNode.children.length < lc.length) lc.forEach((x, index)=>{\n        if (!oldNode.children[index]) oldNode.append(x.cloneNode(true));\n    });\n    Array.from(oldNode.children).forEach((sChild, index)=>{\n        const lChild = lc[index];\n        if (lChild?.$tent?.isComponent || sChild?.$tent?.isComponent) return;\n        if (!lChild) {\n            sChild.remove();\n            return;\n        }\n        if (sChild.tagName !== lChild.tagName) sChild.replaceWith(lChild);\n        // Add children that are not present in the shadow\n        if (sChild.children.length < lChild.children.length) {\n            const scc = Array.from(sChild.children);\n            Array.from(lChild.children).forEach((lcc, index)=>{\n                if (!scc[index]) {\n                    const clone = lcc.cloneNode(true);\n                    // Add attributes to the clone\n                    Object.keys(lcc.$tent.attributes).forEach((key)=>clone[key] = lcc.$tent.attributes[key]);\n                    sChild.append(clone);\n                }\n            });\n        }\n        // Remove children that are not present in the live\n        if (sChild.children.length > lChild.children.length) {\n            const lcc = Array.from(lChild.children);\n            Array.from(sChild.children).forEach((x, index)=>{\n                if (!lcc[index]) x.remove();\n            });\n        }\n        // Add attributes that are not present in the shadow\n        Array.from(lChild.attributes).forEach((attr)=>{\n            if (sChild.getAttribute(attr.name) !== attr.value) sChild.setAttribute(attr.name, attr.value);\n        });\n        // Remove attributes that are not present in the live\n        Array.from(sChild.attributes).forEach((attr)=>{\n            if (!lChild.hasAttribute(attr.name)) sChild.removeAttribute(attr.name);\n        });\n        // Replace text content if it's different and the element has no children\n        if (sChild.textContent !== lChild.textContent && lChild.children.length === 0 && sChild.children.length === 0) sChild.textContent = lChild.textContent;\n        $04c26890a8c692c9$var$$53ffd25df6034fb9$var$walker(sChild, lChild);\n    });\n}\nconst $04c26890a8c692c9$var$$53ffd25df6034fb9$var$t = [\n    \"div\",\n    \"p\",\n    \"ul\",\n    \"li\",\n    \"button\",\n    \"input\",\n    \"label\",\n    \"form\",\n    \"span\",\n    \"h1\",\n    \"h2\",\n    \"h3\",\n    \"h4\",\n    \"h5\",\n    \"h6\",\n    \"a\",\n    \"img\",\n    \"video\",\n    \"audio\",\n    \"canvas\",\n    \"table\",\n    \"tr\",\n    \"td\",\n    \"th\",\n    \"thead\",\n    \"tbody\",\n    \"tfoot\",\n    \"select\",\n    \"option\",\n    \"textarea\",\n    \"pre\",\n    \"code\",\n    \"blockquote\",\n    \"hr\",\n    \"br\",\n    \"iframe\",\n    \"svg\",\n    \"path\",\n    \"circle\",\n    \"rect\",\n    \"polygon\",\n    \"polyline\",\n    \"ellipse\",\n    \"embed\",\n    \"object\",\n    \"param\",\n    \"source\",\n    \"track\",\n    \"nav\",\n    \"header\",\n    \"footer\",\n    \"main\",\n    \"section\",\n    \"article\",\n    \"aside\",\n    \"details\",\n    \"summary\",\n    \"figure\",\n    \"figcaption\",\n    \"mark\",\n    \"small\",\n    \"strong\",\n    \"sub\",\n    \"sup\",\n    \"time\",\n    \"del\",\n    \"ins\",\n    \"kbd\",\n    \"samp\",\n    \"var\",\n    \"b\",\n    \"i\",\n    \"u\",\n    \"s\",\n    \"q\",\n    \"dfn\",\n    \"abbr\",\n    \"cite\",\n    \"address\",\n    \"bdo\",\n    \"ruby\",\n    \"rt\",\n    \"rp\"\n];\nconst $04c26890a8c692c9$var$$53ffd25df6034fb9$export$8b7a896ae75accbf = {};\n$04c26890a8c692c9$var$$53ffd25df6034fb9$var$t.forEach((tag)=>$04c26890a8c692c9$var$$53ffd25df6034fb9$export$8b7a896ae75accbf[tag] = (children, attrs)=>$04c26890a8c692c9$var$$53ffd25df6034fb9$var$createElement([\n            tag,\n            children,\n            attrs\n        ]));\n\n\nconst { div: $25aa99fdd3227299$var$div, button: $25aa99fdd3227299$var$button } = (0, $04c26890a8c692c9$exports.tags);\nconst $25aa99fdd3227299$var$Counter = {\n    state: {\n        count: 0\n    },\n    view: ({ state: state })=>$25aa99fdd3227299$var$div([\n            $25aa99fdd3227299$var$button(\"+\", {\n                onclick: ()=>state.count++\n            }),\n            $25aa99fdd3227299$var$div(state.count),\n            $25aa99fdd3227299$var$button(\"-\", {\n                onclick: ()=>state.count--\n            })\n        ])\n};\n(0, $04c26890a8c692c9$exports.mount)(document.getElementById(\"counter\"), $25aa99fdd3227299$var$Counter);\nconst $25aa99fdd3227299$var$GetStarted = {\n    view: ()=>$25aa99fdd3227299$var$button(\"Get Started\", {\n            onclick: $25aa99fdd3227299$var$onclick,\n            class: \"cta\"\n        })\n};\nfunction $25aa99fdd3227299$var$onclick() {\n    window.location.href = \"https://github.com/tentjs/tent\";\n}\n(0, $04c26890a8c692c9$exports.mount)(document.getElementById(\"get-started\"), $25aa99fdd3227299$var$GetStarted);\n\n\n//# sourceMappingURL=index.0ed5125d.js.map\n","import {mount, tags} from '@tentjs/tent'\n\nconst {div, button} = tags\n\nconst Counter = {\n  state: {count: 0},\n  view: ({state}) => div([\n    button('+', {onclick: () => state.count++}),\n    div(state.count),\n    button('-', {onclick: () => state.count--}),\n  ])\n}\n\nmount(document.getElementById('counter'), Counter)\n\nconst GetStarted = {\n  view: () => button(\n    'Get Started',\n    {onclick, class: 'cta'},\n  )\n}\n\nfunction onclick() {\n  window.location.href = 'https://github.com/tentjs/tent';\n}\n\nmount(\n  document.getElementById('get-started'),\n  GetStarted,\n);\n","\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n$parcel$export(module.exports, \"mount\", () => $53ffd25df6034fb9$export$186d02efde07ef98);\n$parcel$export(module.exports, \"tags\", () => $53ffd25df6034fb9$export$8b7a896ae75accbf);\nfunction $53ffd25df6034fb9$export$186d02efde07ef98(el, component) {\n    const { state: state, view: view, mounted: mounted } = component;\n    let node;\n    if (el == null) return;\n    const proxy = state ? new Proxy({\n        ...state\n    }, {\n        set (obj, prop, value) {\n            if (!obj.hasOwnProperty(prop)) throw new Error(`The property \"${String(prop)}\" does not exist on the state object.`);\n            if (obj[prop] === value) return true;\n            const s = Reflect.set(obj, prop, value);\n            $53ffd25df6034fb9$var$walker(node, view({\n                state: proxy\n            }));\n            return s;\n        }\n    }) : {};\n    node = view({\n        state: proxy\n    });\n    node.$tent = {\n        attributes: {},\n        isComponent: true\n    };\n    el.append(node);\n    mounted?.({\n        state: proxy\n    });\n}\nfunction $53ffd25df6034fb9$var$createElement(context) {\n    const [tag, children, attributes] = context;\n    const elm = document.createElement(tag);\n    elm.$tent = {\n        attributes: {},\n        isComponent: false\n    };\n    if (Array.isArray(children)) children.forEach((c)=>elm.append(Array.isArray(c) ? $53ffd25df6034fb9$var$createElement(c) : c));\n    else elm.append(children);\n    for(const key in attributes){\n        elm.$tent.attributes[key] = attributes[key];\n        if (key.startsWith(\"on\") || /[A-Z]/.test(key)) elm[key] = attributes[key];\n        else elm.setAttribute(key, attributes[key]);\n    }\n    return elm;\n}\nfunction $53ffd25df6034fb9$var$walker(oldNode, newNode) {\n    const lc = Array.from(newNode.children);\n    if (oldNode.children.length < lc.length) lc.forEach((x, index)=>{\n        if (!oldNode.children[index]) oldNode.append(x.cloneNode(true));\n    });\n    Array.from(oldNode.children).forEach((sChild, index)=>{\n        const lChild = lc[index];\n        if (lChild?.$tent?.isComponent || sChild?.$tent?.isComponent) return;\n        if (!lChild) {\n            sChild.remove();\n            return;\n        }\n        if (sChild.tagName !== lChild.tagName) sChild.replaceWith(lChild);\n        // Add children that are not present in the shadow\n        if (sChild.children.length < lChild.children.length) {\n            const scc = Array.from(sChild.children);\n            Array.from(lChild.children).forEach((lcc, index)=>{\n                if (!scc[index]) {\n                    const clone = lcc.cloneNode(true);\n                    // Add attributes to the clone\n                    Object.keys(lcc.$tent.attributes).forEach((key)=>clone[key] = lcc.$tent.attributes[key]);\n                    sChild.append(clone);\n                }\n            });\n        }\n        // Remove children that are not present in the live\n        if (sChild.children.length > lChild.children.length) {\n            const lcc = Array.from(lChild.children);\n            Array.from(sChild.children).forEach((x, index)=>{\n                if (!lcc[index]) x.remove();\n            });\n        }\n        // Add attributes that are not present in the shadow\n        Array.from(lChild.attributes).forEach((attr)=>{\n            if (sChild.getAttribute(attr.name) !== attr.value) sChild.setAttribute(attr.name, attr.value);\n        });\n        // Remove attributes that are not present in the live\n        Array.from(sChild.attributes).forEach((attr)=>{\n            if (!lChild.hasAttribute(attr.name)) sChild.removeAttribute(attr.name);\n        });\n        // Replace text content if it's different and the element has no children\n        if (sChild.textContent !== lChild.textContent && lChild.children.length === 0 && sChild.children.length === 0) sChild.textContent = lChild.textContent;\n        $53ffd25df6034fb9$var$walker(sChild, lChild);\n    });\n}\nconst $53ffd25df6034fb9$var$t = [\n    \"div\",\n    \"p\",\n    \"ul\",\n    \"li\",\n    \"button\",\n    \"input\",\n    \"label\",\n    \"form\",\n    \"span\",\n    \"h1\",\n    \"h2\",\n    \"h3\",\n    \"h4\",\n    \"h5\",\n    \"h6\",\n    \"a\",\n    \"img\",\n    \"video\",\n    \"audio\",\n    \"canvas\",\n    \"table\",\n    \"tr\",\n    \"td\",\n    \"th\",\n    \"thead\",\n    \"tbody\",\n    \"tfoot\",\n    \"select\",\n    \"option\",\n    \"textarea\",\n    \"pre\",\n    \"code\",\n    \"blockquote\",\n    \"hr\",\n    \"br\",\n    \"iframe\",\n    \"svg\",\n    \"path\",\n    \"circle\",\n    \"rect\",\n    \"polygon\",\n    \"polyline\",\n    \"ellipse\",\n    \"embed\",\n    \"object\",\n    \"param\",\n    \"source\",\n    \"track\",\n    \"nav\",\n    \"header\",\n    \"footer\",\n    \"main\",\n    \"section\",\n    \"article\",\n    \"aside\",\n    \"details\",\n    \"summary\",\n    \"figure\",\n    \"figcaption\",\n    \"mark\",\n    \"small\",\n    \"strong\",\n    \"sub\",\n    \"sup\",\n    \"time\",\n    \"del\",\n    \"ins\",\n    \"kbd\",\n    \"samp\",\n    \"var\",\n    \"b\",\n    \"i\",\n    \"u\",\n    \"s\",\n    \"q\",\n    \"dfn\",\n    \"abbr\",\n    \"cite\",\n    \"address\",\n    \"bdo\",\n    \"ruby\",\n    \"rt\",\n    \"rp\"\n];\nconst $53ffd25df6034fb9$export$8b7a896ae75accbf = {};\n$53ffd25df6034fb9$var$t.forEach((tag)=>$53ffd25df6034fb9$export$8b7a896ae75accbf[tag] = (children, attrs)=>$53ffd25df6034fb9$var$createElement([\n            tag,\n            children,\n            attrs\n        ]));\n\n\n//# sourceMappingURL=main.js.map\n","type Component = {\n  view: (context: {state: object}) => CustomNode;\n  state?: object;\n  mounted?: (context: {state: object}) => void;\n};\n\ntype CustomNode = Node & Element & HTMLElement & {\n  $tent: {\n    attributes: object;\n    isComponent: boolean;\n  };\n  children: CustomNode[];\n};\n\nfunction mount(el: HTMLElement | null, component: Component) {\n  const {state, view, mounted} = component;\n  let node: CustomNode;\n\n  if (el == null) {\n    return;\n  }\n\n  const proxy = state\n    ? new Proxy({...state}, {\n      set(obj, prop, value) {\n        if (!obj.hasOwnProperty(prop)) {\n          throw new Error(\n            `The property \"${String(prop)\n            }\" does not exist on the state object.`,\n          );\n        }\n        if (obj[prop] === value) return true;\n\n        const s = Reflect.set(obj, prop, value);\n\n        walker(\n          node,\n          view({state: proxy}),\n        );\n\n        return s;\n      },\n    })\n    : {};\n\n  node = view({state: proxy});\n  node.$tent = {\n    attributes: {},\n    isComponent: true,\n  };\n\n  el.append(node);\n\n  mounted?.({state: proxy});\n}\n\ntype Children = string | (Node | Context)[]\ntype Context = [string, Children, object | undefined];\n\nfunction createElement(context: Context) {\n  const [tag, children, attributes] = context;\n  const elm = document.createElement(tag) as CustomNode;\n\n  elm.$tent = {\n    attributes: {},\n    isComponent: false,\n  };\n\n  if (Array.isArray(children)) {\n    children.forEach(\n      (c) =>\n        elm.append(\n          Array.isArray(c) ? createElement(c) : c,\n        ),\n    );\n  } else {\n    elm.append(children);\n  }\n\n  for (const key in attributes) {\n    elm.$tent.attributes[key] = attributes[key];\n\n    if (key.startsWith(\"on\") || /[A-Z]/.test(key)) {\n      elm[key] = attributes[key];\n    } else {\n      elm.setAttribute(key, attributes[key]);\n    }\n  }\n\n  return elm;\n}\n\nfunction walker(oldNode: CustomNode, newNode: CustomNode) {\n  const lc = Array.from<CustomNode>(newNode.children);\n\n  if (oldNode.children.length < lc.length) {\n    lc.forEach((x, index) => {\n      if (!oldNode.children[index]) {\n        oldNode.append(x.cloneNode(true));\n      }\n    });\n  }\n\n  Array.from<CustomNode>(oldNode.children).forEach((sChild, index) => {\n    const lChild = lc[index];\n\n    if (lChild?.$tent?.isComponent || sChild?.$tent?.isComponent) {\n      return;\n    }\n\n    if (!lChild) {\n      sChild.remove();\n      return;\n    }\n\n    if (sChild.tagName !== lChild.tagName) {\n      sChild.replaceWith(lChild);\n    }\n\n    // Add children that are not present in the shadow\n    if (sChild.children.length < lChild.children.length) {\n      const scc = Array.from(sChild.children);\n\n      Array.from<CustomNode>(lChild.children).forEach((lcc, index) => {\n        if (!scc[index]) {\n          const clone = lcc.cloneNode(true);\n\n          // Add attributes to the clone\n          Object.keys(lcc.$tent.attributes).forEach(\n            (key) => clone[key] = lcc.$tent.attributes[key],\n          );\n\n          sChild.append(clone);\n        }\n      });\n    }\n\n    // Remove children that are not present in the live\n    if (sChild.children.length > lChild.children.length) {\n      const lcc = Array.from(lChild.children);\n\n      Array.from(sChild.children).forEach((x, index) => {\n        if (!lcc[index]) {\n          x.remove();\n        }\n      });\n    }\n\n    // Add attributes that are not present in the shadow\n    Array.from(lChild.attributes).forEach((attr) => {\n      if (sChild.getAttribute(attr.name) !== attr.value) {\n        sChild.setAttribute(attr.name, attr.value);\n      }\n    });\n    // Remove attributes that are not present in the live\n    Array.from(sChild.attributes).forEach((attr) => {\n      if (!lChild.hasAttribute(attr.name)) {\n        sChild.removeAttribute(attr.name);\n      }\n    });\n\n    // Replace text content if it's different and the element has no children\n    if (\n      sChild.textContent !== lChild.textContent &&\n      lChild.children.length === 0 &&\n      sChild.children.length === 0\n    ) {\n      sChild.textContent = lChild.textContent;\n    }\n\n    walker(sChild, lChild);\n  });\n}\n\nconst t = [\n  \"div\",\n  \"p\",\n  \"ul\",\n  \"li\",\n  \"button\",\n  \"input\",\n  \"label\",\n  \"form\",\n  \"span\",\n  \"h1\",\n  \"h2\",\n  \"h3\",\n  \"h4\",\n  \"h5\",\n  \"h6\",\n  \"a\",\n  \"img\",\n  \"video\",\n  \"audio\",\n  \"canvas\",\n  \"table\",\n  \"tr\",\n  \"td\",\n  \"th\",\n  \"thead\",\n  \"tbody\",\n  \"tfoot\",\n  \"select\",\n  \"option\",\n  \"textarea\",\n  \"pre\",\n  \"code\",\n  \"blockquote\",\n  \"hr\",\n  \"br\",\n  \"iframe\",\n  \"svg\",\n  \"path\",\n  \"circle\",\n  \"rect\",\n  \"polygon\",\n  \"polyline\",\n  \"ellipse\",\n  \"embed\",\n  \"object\",\n  \"param\",\n  \"source\",\n  \"track\",\n  \"nav\",\n  \"header\",\n  \"footer\",\n  \"main\",\n  \"section\",\n  \"article\",\n  \"aside\",\n  \"details\",\n  \"summary\",\n  \"figure\",\n  \"figcaption\",\n  \"mark\",\n  \"small\",\n  \"strong\",\n  \"sub\",\n  \"sup\",\n  \"time\",\n  \"del\",\n  \"ins\",\n  \"kbd\",\n  \"samp\",\n  \"var\",\n  \"b\",\n  \"i\",\n  \"u\",\n  \"s\",\n  \"q\",\n  \"dfn\",\n  \"abbr\",\n  \"cite\",\n  \"address\",\n  \"bdo\",\n  \"ruby\",\n  \"rt\",\n  \"rp\",\n];\nconst tags: Record<string, (children: Children, attrs?: object) => CustomNode> = {};\nt.forEach(\n  (tag) =>\n    tags[tag] = (children, attrs) =>\n      createElement([tag, children, attrs]),\n);\n\nexport {mount, tags};\n"],"names":["$04c26890a8c692c9$exports","$04c26890a8c692c9$var$$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","$04c26890a8c692c9$var$$53ffd25df6034fb9$export$186d02efde07ef98","el","component","node","state","view","mounted","proxy","Proxy","obj","prop","value","hasOwnProperty","Error","String","Reflect","$04c26890a8c692c9$var$$53ffd25df6034fb9$var$walker","oldNode","newNode","lc","Array","from","children","length","forEach","x","index","append","cloneNode","sChild","lChild","$tent","isComponent","remove","tagName","replaceWith","scc","lcc","clone","keys","attributes","key","attr","getAttribute","name","setAttribute","hasAttribute","removeAttribute","textContent","$04c26890a8c692c9$var$$53ffd25df6034fb9$export$8b7a896ae75accbf","$04c26890a8c692c9$var$$53ffd25df6034fb9$var$t","tag","attrs","$04c26890a8c692c9$var$$53ffd25df6034fb9$var$createElement","context","elm","document","createElement","isArray","c","startsWith","test","div","$25aa99fdd3227299$var$div","button","$25aa99fdd3227299$var$button","tags","$25aa99fdd3227299$var$onclick","window","location","href","mount","getElementById","count","onclick","class"],"version":3,"file":"index.0ed5125d.js.map"}